<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_play</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inEditor = 1;
image_speed = 0;
asdf = 0;
started = 0;
dead = 0;
startx = self.x-view_xview[1];
startx2 = self.x-view_xview[1];
fixAttempt = 0;
//visible = false;

sprite_index = spr_inv;

//Port on Screen
/*view_xport[1] = 0;
view_yport[1] = 0;
view_wport[1] = 480;
view_hport[1] = 320;

//View in Room
view_xview[1] = 0;
view_yview[1] = 0;
view_wview[1] = 480;
view_hview[1] = 320;
*/

//Port on Screen
view_xport[2] = 0;
view_yport[2] = 0;
view_wport[2] = 480;
view_hport[2] = 320;

//View in Room
view_xview[2] = 0;
view_yview[2] = 0;
view_wview[2] = 480;
view_hview[2] = 320;

/*if room != room_levelcreator{
    obj_player.jumpnow = 0;
}*/

sprite_index = spr_inv;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn save blocks
instance_create(obj_player.x,obj_player.y+24,obj_saveblock);
instance_create(obj_player.x-16,obj_player.y+24,obj_saveblock);
instance_create(obj_player.x+16,obj_player.y+24,obj_saveblock);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_gui_tile.visible = true;
obj_gui.visible = true;
obj_skin.visible = true;
obj_savelevel.visible = true;
obj_leavegame.visible = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fixAttempt = 0{
    if inEditor = 0{
        inEditor = 1;
        /*
        //Port on Screen
        view_xport[2] = 0;
        view_yport[2] = 0;
        view_wport[2] = 480;
        view_hport[2] = 320;
        
        //View in Room
        view_xview[2] = 0;
        view_yview[2] = 0;
        view_wview[2] = 480;
        view_hview[2] = 320;
        */
        
        //Enabling the grid
        //background_visible[1] = false;
        
        //Resetting the game
        visible = true;
        obj_player.canMove = 0;
        obj_tileparent.canMove = 0;
        with obj_solid{
            instance_destroy();
        }
        with obj_solidtop{
            instance_destroy();
        }
        with obj_mushroom_tile{
            instance_destroy();
        }
        with obj_amiiboshroom{
            instance_destroy();
        }
        obj_goombattle.hspeed = 0;
        obj_koopatile.hspeed = 0;
        obj_kooparedtile.hspeed = 0;
        obj_blocktile.asdf = 0;
        obj_pipetile.gone = 0;
        obj_thwomptile.charge = 0;
        with obj_coinslide{
            instance_destroy();
        }
        with obj_powerupeffect{
            instance_destroy();
        }
        with obj_bill{
            instance_destroy();
        }
        with obj_saveblock{
            instance_destroy();
        }
        obj_block_parent.hit = 0;
        obj_block_parent.visible = true;
        background_visible[0] = true;
        //view_object[2] = obj_camera;
        obj_cointile.collect = 0;
        obj_flagtile.asdfasasd = 0;
        obj_player.qwer = 0;
        invincible = 0;
        invinciblea = 0;
        obj_player.dead = 0;
        obj_enemyparent.dead = 0;
        obj_enemyparent.deadb = 0;
        obj_onion.gonea = 2;
        obj_player.item = 0;
        obj_player.amiibo = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if inEditor = 1{
    sprite = spr_play_v2;
} else {
    sprite = spr_edit_v2;
}


/*x = view_xview[1]+(128+69)*2+10+4;
y = view_yview[1]+128*2+7-40;
*/

x = view_xview[2]+(128+69)*2+10+4-80-(1888-240-170);
y = view_yview[2]+128*2+7-40;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///View limits
/*if inEditor = 1 {

    //Port on Screen
    /*view_xport[2] = 0;
    view_yport[2] = 0;
    view_wport[2] = 240;
    view_hport[2] = 160;
    */
    //View in Room
    //view_xview[2] = 0;
    //view_yview[2] = 0;
    //view_wview[2] = 240;
    //view_hview[2] = 160;
    
/*    if view_wview &lt;= 240{
        view_wview[2] = 240;
    } else {
        view_wview[2] -= 8;
    }
    
    if view_hview &lt;= 160{
        view_hview[2] = 160;
    } else {
        view_wview[2] -= 6;
    }

} else if inEditor = 0{
    //Port on Screen
    /*view_xport[2] = 0;
    view_yport[2] = 0;
    view_wport[2] = 240;
    view_hport[2] = 160;
    */
    //View in Room
    //view_xview[2] = 0;
   // view_yview[2] = 0;
    //view_wview[2] = 480;
    //view_hview[2] = 320;
    
/*    if view_wview &gt;= 480{
        view_wview[2] = 320;
    } else {
        view_wview[2] += 8;
    }
    
    if view_hview &gt;= 320{
        view_hview[2] = 320;
    } else {
        view_hview[2] += 6;
    }

}
*/

//Temporary dimensions

/*if inEditor = 0{
    view_wview[2] = 480;
    view_hview[2] = 320;
    
    view_yport[2] = 0;
    view_wport[2] = 480;
    view_hport[2] = 320;
} else {
    view_wview[2] = 320;
    view_hview[2] = 320;
    
    view_yport[2] = 0;
    view_wport[2] = 480;
    view_hport[2] = 320;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Some title screen things

if room = room_levelcreator{
    //Load last level
    if started = 0{
        global.beginGame = ini_read_real('Asdf','agg',0);
        started = 1;
    }
    
    if global.beginGame = 0{
        global.beginGame = 1;
        //visible = false;
        ini_write_real('Asdf','agg',1);
        game_load("level1.ini");
    }
    //Spawn title screen objects
    if global.beginGame = 1{
        global.beginGame = 2;
        //instance_create(176,176,obj_tmake);
        //instance_create(256,176,obj_tplay);
        inEditor = 1;
        
        //Play at start
        /*if !instance_exists(obj_powerup){
        alarm[1] = 45;
        obj_gui_tile.visible = false;
        obj_gui.visible = false;
        obj_skin.visible = false;
        obj_savelevel.visible = false;
        obj_leavegame.visible = false;*/
    
        
            
        //Enabling the grid
        //background_visible[1] = true;
    }
}

if instance_exists(obj_tmake){
    //visible = false;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quest mechanic
if room != room_levelcreator{
    //Running the game
    obj_player.canMove = 1;
    obj_tileparent.canMove = 1;
    /*obj_goombattle.hspeed = -0.35;
    obj_koopatile.hspeed = -0.35;
    obj_kooparedtile.hspeed = -0.35;
    obj_solidplace.step1 = 0;
    obj_solidplace.step2 = 0;*/
    invincible = 0;
    invinciblea = 0;
    obj_solidplace.step3 = 0;
    //obj_mushroom_tile.hspeed = -0.5;
    //instance_create(obj_player.x,obj_player.y,obj_luma);
    background_visible[0] = false;
    //obj_flagtile.asdfasasd = 0;
    //view_object[2] = obj_camera;
    //obj_enemyparent.deadly = 0;
    //obj_cointile.collect = 0;
    with obj_skinparent{
        instance_destroy();
    }
    obj_enemyparent.dead = 0;
    obj_enemyparent.deadb = 0;
    obj_enemyparent.canMove = 0;
    obj_enemyparent.image_yscale = 1;
    /*obj_player.dead = 0;
    obj_player.deadga = 0;
    obj_player.deadba = 0*/
    //obj_player.vspeed = 0;
    //obj_player.gravity = 0;
    /*with obj_player{
        if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_solidplace,false,false){
            if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_pipetile,false,false){
                if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_blocktile,false,false){
                    instance_create(obj_player.x,obj_player.y+24,obj_saveblock);
                    instance_create(obj_player.x-16,obj_player.y+24,obj_saveblock);
                    instance_create(obj_player.x+16,obj_player.y+24,obj_saveblock);
                }
            }
        }
    }*/
    //obj_player.jumpnow = 0;
    //obj_enemy.alarm[1] = 10;
    
    //Deactivating instances outside of the view
    /*instance_deactivate_all(true);
    instance_activate_object(obj_tileparent);
    instance_activate_object(obj_player);
    instance_activate_object(obj_camera);
    instance_activate_region(view_xview[1],view_yview[1],view_wview[1],view_hview[1],true);
    instance_activate_object(obj_play);
    */
    
    inEditor = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Click
//if mouse_check_button_pressed(mb_left) || obj_player.deadReset = 1{

if room = room_levelcreator{
if mouse_x &gt; view_xview[2]+(128+69)*2+10+4-sprite_width/4+16{
if mouse_y &gt; view_yview[2]+128*2+7-41{
if mouse_x &lt; view_xview[2]+(128+69)*2+10+4+sprite_width-4{
if mouse_y &gt; view_yview[2]+128*2+7-40{
if visible = true{

if inEditor = 1{
/* Old Views
    //Port on Screen
    view_xport[1] = 80;
    view_yport[1] = 40;
    view_wport[1] = 320;
    view_hport[1] = 240;
    
    //View in Room
    view_xview[1] = 80;
    view_yview[1] = 40;
    view_wview[1] = 160;
    view_hview[1] = 120;
*/
    if !instance_exists(obj_powerup){
    fixAttempt = 1;
    //New Views
    
    /*
    //Port on Screen
    view_xport[2] = 0;
    view_yport[2] = 0;
    view_wport[2] = 480;
    view_hport[2] = 320;
    
    //View in Room
    view_xview[2] = 0;
    view_yview[2] = 0;
    view_wview[2] = 240;
    view_hview[2] = 160;
    */
    
    //Enabling the grid
    //background_visible[1] = true;
    
    if room != room_titlescreen_new{
    //Running the game
    obj_player.canMove = 1;
    obj_tileparent.canMove = 1;
    obj_goombattle.hspeed = -0.35;
    obj_koopatile.hspeed = -0.35;
    obj_kooparedtile.hspeed = -0.35;
    obj_solidplace.step1 = 0;
    obj_solidplace.step2 = 0;
    invincible = 0;
    invinciblea = 0;
    obj_solidplace.step3 = 0;
    //obj_mushroom_tile.hspeed = -0.5;
    instance_create(obj_player.x,obj_player.y,obj_luma);
    background_visible[0] = false;
    obj_flagtile.asdfasasd = 0;
    //view_object[2] = obj_camera;
    obj_enemyparent.deadly = 0;
    obj_cointile.collect = 0;
    with obj_skinparent{
        instance_destroy();
    }
    obj_enemyparent.dead = 0;
    obj_enemyparent.deadb = 0;
    obj_enemyparent.canMove = 0;
    obj_enemyparent.image_yscale = 1;
    obj_player.dead = 0;
    obj_player.deadga = 0;
    obj_player.deadba = 0
    obj_cointile.collect = 0;
    obj_player.vspeed = 0;
    obj_player.deadReset = 0;
    obj_player.gravity = 0;
    with obj_player{
        if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_solidplace,false,false){
            if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_pipetile,false,false){
                if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_blocktile,false,false){
                    if !collision_rectangle(obj_player.x-8,obj_player.y+16,obj_player.x+8,obj_player.y+32,obj_solidtop,true,false){
                        instance_create(obj_player.x,obj_player.y+24,obj_saveblock);
                        instance_create(obj_player.x-16,obj_player.y+24,obj_saveblock);
                        instance_create(obj_player.x+16,obj_player.y+24,obj_saveblock);
                        //alarm[2] = 2;
                    }
                    
                    /*instance_create(obj_player.x,obj_player.y+16,obj_solidtop);
                    instance_create(obj_player.x-16,obj_player.y+16,obj_solidtop);
                    instance_create(obj_player.x+16,obj_player.y+16,obj_solidtop);*/
                }
            }
        }
    }
    obj_player.jumpnow = 0;
    obj_enemy.alarm[1] = 10;
    
    //Deactivating instances outside of the view
    /*instance_deactivate_all(true);
    instance_activate_object(obj_tileparent);
    instance_activate_object(obj_player);
    instance_activate_object(obj_camera);
    instance_activate_region(view_xview[1],view_yview[1],view_wview[1],view_hview[1],true);
    instance_activate_object(obj_play);
    */
    
    inEditor = 0;
    instance_create(0,0,obj_ingame_hud);
    
    
    }
} else {
    //show_message('hi');
    inEditor = 1;
    /*
    //Port on Screen
    view_xport[2] = 0;
    view_yport[2] = 0;
    view_wport[2] = 480;
    view_hport[2] = 320;
    
    //View in Room
    view_xview[2] = 0;
    view_yview[2] = 0;
    view_wview[2] = 480;
    view_hview[2] = 320;
    */
    
    //Enabling the grid
    //background_visible[1] = false;
    
    //Resetting the game
    obj_player.canMove = 0;
    obj_tileparent.canMove = 0;
    with obj_solid{
        instance_destroy();
    }
    with obj_solidtop{
        instance_destroy();
    }
    /*with obj_mushroom_tile{
        instance_destroy();
    }*/
    with obj_amiiboshroom{
        instance_destroy();
    }
    obj_onion.gonea = 2;
    obj_goombattle.hspeed = 0;
    obj_koopatile.hspeed = 0;
    obj_kooparedtile.hspeed = 0;
    obj_blocktile.asdf = 0;
    obj_pipetile.gone = 0;
    obj_thwomptile.charge = 0;
    with obj_coinslide{
        instance_destroy();
    }
    with obj_powerupeffect{
        instance_destroy();
    }
    with obj_bill{
        instance_destroy();
    }
    with obj_saveblock{
        instance_destroy();
    }
    obj_block_parent.hit = 0;
    obj_block_parent.visible = true;
    background_visible[0] = true;
    //view_object[2] = obj_camera;
    obj_cointile.collect = 0;
    obj_flagtile.asdfasasd = 0;
    obj_player.qwer = 0;
    invincible = 0;
    invinciblea = 0;
    obj_player.dead = 0;
    obj_enemyparent.dead = 0;
    obj_enemyparent.deadb = 0;
    obj_player.item = 0;
    obj_player.amiibo = 0;
    with obj_saveblock{
        instance_destroy();
    }
}

} else {
    fixAttempt = 0;
}
audio_play_sound(snd_snap,0,false);
alarm[0] = 4;

}
}
}
}
}
}

//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>asdf = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//asdf = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play at start
/*    if !instance_exists(obj_powerup){
    alarm[1] = 45;
    obj_gui_tile.visible = false;
    obj_gui.visible = false;
    obj_skin.visible = false;
    obj_savelevel.visible = false;
    obj_leavegame.visible = false;

    
        
    //Enabling the grid
    //background_visible[1] = true;
    
    if room != room_titlescreen_new{
    //Running the game
    obj_player.canMove = 1;
    obj_tileparent.canMove = 1;
    obj_goombattle.hspeed = -0.35;
    obj_koopatile.hspeed = -0.35;
    obj_kooparedtile.hspeed = -0.35;
    obj_solidplace.step1 = 0;
    obj_solidplace.step2 = 0;
    invincible = 0;
    invinciblea = 0;
    obj_solidplace.step3 = 0;
    obj_mushroom_tile.hspeed = -0.5;
    instance_create(obj_player.x,obj_player.y,obj_luma);
    background_visible[0] = false;
    obj_flagtile.asdfasasd = 0;
    //view_object[2] = obj_camera;
    obj_enemyparent.deadly = 0;
    obj_cointile.collect = 0;
    with obj_skinparent{
        instance_destroy();
    }
    obj_enemyparent.dead = 0;
    obj_enemyparent.deadb = 0;
    obj_enemyparent.canMove = 0;
    obj_enemyparent.image_yscale = 1;
    obj_player.dead = 0;
    obj_player.deadga = 0;
    obj_player.deadba = 0
    obj_player.vspeed = 0;
    obj_player.gravity = 0;
    with obj_player{
        if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_solidplace,false,false){
            if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_pipetile,false,false){
                if !collision_rectangle(obj_player.x-7,obj_player.y+1,obj_player.x+7,obj_player.y+20,obj_blocktile,false,false){
                    instance_create(obj_player.x,obj_player.y+24,obj_saveblock);
                    instance_create(obj_player.x-16,obj_player.y+24,obj_saveblock);
                    instance_create(obj_player.x+16,obj_player.y+24,obj_saveblock);
                }
            }
        }
    }
    obj_player.jumpnow = 0;
    
    inEditor = 0;
    
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw a shadow
d3d_set_fog(true,c_black,0,0);
draw_set_alpha(0.3);

draw_sprite(sprite,image_index,view_xview[1]+(128+69)*2+10+4+3,view_yview[1]+128*2+7-40+3);

draw_set_alpha(1);
d3d_set_fog(false,c_black,0,0);

//Draw self
draw_sprite(sprite,image_index,view_xview[1]+(128+69)*2+10+4,view_yview[1]+128*2+7-40);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
