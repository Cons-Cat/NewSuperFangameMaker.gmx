<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_saveblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_solidtop</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The tile spawned
instance = obj_cointile;
spriteVal = spr_solid;

startx = self.x;
starty = self.y;
ax = 0;
ay = 0;

playVar = 0;

select = 0;
selSTOP = 0;

gone = 0;

//The lowest the y will ever get
yFloor = y;

//Hopping state
jump = 0;

asdf = 0;
agg = 0;
went = 0;
canPlace = 0;
notSelect = 0;

//Offset compensation
offset = 0;

//Enemy dragging
altDrag = 0;
sick = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allow the player to place tiles again
canPlace = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = 0;
y = yFloor+8;
notSelect = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hop again
if vspeed = 0{
    jump = 0;
    asdf = 0;
    went = 0;
    agg = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Keep moving
x = view_xview[1]+startx+ax//-1600+32;
if instance_exists(obj_player){
    if obj_player.x&gt;240{
        ax = obj_player.x-240;
    }
}

//Getting the sprite
if obj_play.inEditor = 1{
    if instance = obj_solidplace_new{
        sprite_index = spr_smb1_tile;
    }
    if instance = obj_cointile{
        sprite_index = spr_smb1_coin_tile;
    }
    if instance = obj_itemblocktile{
        sprite_index = spr_smb1_itemblock;
    }
    if instance = obj_blocktile{
        sprite_index = spr_smb1_block;
    }
    if instance = obj_pipetile{
        sprite_index = spr_smb1_pipeicon;
    }
    if instance = obj_bricktile{
        sprite_index = spr_smb1_brick;
    }
    if instance = obj_newgoomba{
        sprite_index = spr_smb1_goomba;
    }
    if instance = obj_newkoopa{
        sprite_index = spr_smb1_koopagui;
    }
    if instance = obj_newkoopared{
        sprite_index = spr_smb1_kooparedgui;
    }
    if instance = obj_newkoopaspring{
        sprite_index = spr_smb1_koopalasgui;
    }
    if instance = obj_newboolas{
        sprite_index = spr_smb1_boolaser;
    }
    if instance = obj_newgoombalas{
        sprite_index = spr_smb1_goombalaser;
    }
    if instance = obj_bootile{
        sprite_index = spr_smb1_bootile;
    }
    if instance = obj_newspiny{
        sprite_index = spr_smb1_spiny;
    }
    if instance = obj_thwomptile{
        sprite_index = spr_smb1_thwompgui;
    }
    if instance = obj_mushroom_tile{
        sprite_index = spr_smb1_mushroom;
    }
    if instance = obj_fireflower_tile{
        sprite_index = spr_smb1_fireflower;
    }
    if instance = obj_lasflower_tile{
        sprite_index = spr_smb1_lasflower;
    }
    if instance = obj_armorflower{
        sprite_index = spr_smb1_armflower;
    }
    if instance = obj_cappy{
        sprite_index = spr_smb1_cappy;
    }
    if instance = obj_amiiboshroom{
        sprite_index = spr_amiiboshroom;
    }
    if instance = obj_newcannon{
        sprite_index = spr_bullettower_top;
    }
    if instance = obj_ladder{
        sprite_index = spr_smb1_ladder;
    }
    if instance = obj_newbowser{
        sprite_index = spr_smb1_bowsergui;
    }
    if instance = obj_newdrybowser{
        sprite_index = spr_smb1_drybowsergui;
    }
    if instance = obj_peachbowser{
        sprite_index = spr_smb1_peachbowsergui;
    }
    if instance = obj_yoshi{
        sprite_index = spr_smb1_yoshigui;
    }
    if instance = obj_spring{
        sprite_index = spr_smb1_spring;
    }
    if instance = obj_newbuzzy{
        sprite_index = spr_smb1_buzzy;
    }
    if instance = obj_newdrykoopa{
        sprite_index = spr_smb1_drygui;
    }
    
    spriteVal = sprite_index;
} else {
    sprite_index = spr_inv;
}

//Compensating for offsets
if obj_play.inEditor = 1{
    if gone = 0{
        
        if instance = obj_cointile{
            x += 8;
            y += 8;
        }
        if instance = obj_blocktile{
            y += 8;
        }
        if instance = obj_ladder{
            y += 8;
            altDrag = 1;
        }
        if instance = obj_spring{
            y += 8;
            altDrag = 1;
        }
        if instance = obj_pipetile{
            y += 8;
            altDrag = 1;
        }
        if instance = obj_newgoomba{
            offset = 8;
            yFloor -= 8;
            altDrag = 1;
        }
        if instance = obj_newgoombalas{
            offset = 8;
            yFloor -= 8;
            altDrag = 1;
        }
        if instance = obj_newbuzzy{
            offset = 8;
            yFloor -= 8;
            altDrag = 1;
        }
        if instance = obj_newbowser{
            offset = 8;
            yFloor -= 8;
            altDrag = 1;
        }
        if instance = obj_newdrykoopa{
            offset = 8;
            yFloor -= 8;
            altDrag = 1;
        }
        if instance = obj_newdrybowser{
            offset = 8;
            yFloor -= 8;
            altDrag = 1;
        }
        if instance = obj_peachbowser{
            offset = 8;
            yFloor -= 8;
            altDrag = 1;
        }
        if instance = obj_itemblocktile{
            yFloor -= 8;
            offset = 8;
        }
        if instance = obj_bricktile{
            yFloor -= 8;
            offset = 8;
        }
        if instance = obj_newcannon{
            yFloor = 3;
            offset = 8;
        }
        if instance = obj_bootile{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_newboolas{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_newkoopa{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_newkoopaspring{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_yoshi{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_sv{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_newkoopared{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_newspiny{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_thwomptile{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_mushroom_tile{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_fireflower_tile{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_lasflower_tile{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_cappy{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_armorflower{
            yFloor -= 8;
            offset = 8;
            altDrag = 1;
        }
        if instance = obj_amiiboshroom{
            yFloor -= 8;
            offset = 8;
        }
        if instance = obj_solidplace_new{
            yFloor -= 8;
        }
    }
    
    gone = 1;
}

//Hopping when selected
if select = 1{
    if obj_play.inEditor = 1{
        
        if agg = 0{
            agg = 1;
            
            if jump = 0{
                vspeed = -5;
            }
        }
        
        if vspeed &gt; 0{
            if asdf = 0{
                jump += 1;
                asdf = 1;
            }
        }
        if vspeed = 0{
            asdf = 0;
        }
    gravity = 0.5;
    }
    
    if vspeed = 0{
        if went = 0{
            went = 1;
            alarm[0] = 60;
        }
    }
}

if y &gt; yFloor+8{
    y = yFloor+8;
    
    if jump = 1{
        vspeed = -3;
        y -= 1;
    }
    if jump = 2{
        vspeed = -1;
        y -= 1;
    }
    if jump = 3{
        vspeed = 0;
    }
}

/*if select = 1{
    obj_tileparent.select = 0;
    notSelect = 1;
}*/

/*if select = 0{
    if notSelect = 1{
        notSelect = 0;
        alarm[1] = 15;
    }
}
*/
///Hop again
if select = 0{
    jump = 0;
    asdf = 0;
    went = 0;
    agg = 0;
    //y = yFloor+8;
}

//Folding up
playVar = obj_gui.sdt;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sick = 0;
canPlace = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select this tile
if instance = obj_cointile || instance = obj_blocktile{
    if mouse_x &gt;= self.x &amp;&amp; mouse_x &lt;= self.x+16 &amp;&amp; mouse_y &gt;= view_yview[2]+self.y-8 &amp;&amp; mouse_y &lt;= view_yview[2]+self.y+8{
        obj_gui_tile.select = 0;
        self.select = 1;
    }
} else {
    if mouse_x &gt;= self.x-8 &amp;&amp; mouse_x &lt;= self.x+8 &amp;&amp; mouse_y &gt;= view_yview[2]+self.y &amp;&amp; mouse_y &lt;= view_yview[2]+self.y+16{
        obj_gui_tile.select = 0;
        self.select = 1;
    }
}

if instance = obj_amiiboshroom{
    if mouse_x &gt;= self.x-8 &amp;&amp; mouse_x &lt;= self.x+8 &amp;&amp; mouse_y &gt;= view_yview[2]+self.y &amp;&amp; mouse_y &lt;= view_yview[2]+self.y+16{
        if !instance_exists(obj_amiibobox){
            if global.skin = 0{
                instance_create(x,y,obj_amiiboselect);
                view_visible[3] = true;
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.selected = 0{
//if ((mouse_x &lt; view_xview[2]+(128+69)*2+10+4-sprite_width/4+16) &amp;&amp; (mouse_y &lt; view_yview[2]+128*2+7-40+240)) || ((mouse_x &lt; view_xview[2]+(128+69)*2+10+4-sprite_width/4+16) &amp;&amp; !(mouse_y &lt; view_yview[2]+128*2+7-40)){
if mouse_x &gt; view_xview[2]+79{
if mouse_x &lt; view_xview[2]+480-81
//if mouse_y &lt; view_yview[2]+128*2+7-41{
//if mouse_x &gt; view_xview[2]+(128+69)*2+10+4+sprite_width-4{
//if {
    //if canPlace = 0{
        if obj_play.inEditor = 1{
            if select = 1{
                if mouse_y &gt; view_yview[2]+37 &amp;&amp; mouse_y &lt; view_yview[2]+280+320-32{
                 //   if mouse_y &lt; 280-8+240{
                        //if position_empty(mouse_x,mouse_y){
                            if altDrag = 0{
                                if !collision_point(mouse_x,mouse_y,obj_superparent,true,false){
                                //if position_empty(mouse_x,mouse_y){
                                    if instance != obj_amiiboshroom{
                                        if instance = obj_solidplace_new{
                                            with instance_create(mouse_x,mouse_y,instance){
                                                x=floor(x/16)*16;
                                                y=floor(y/16)*16;
                                                //x = ((mouse_x div 16)*16);
                                                //y = ((mouse_y div 16)*16);
                                            }
                                            canPlace = 1;
                                            alarm[2] = 5;
                                        }
                                    }
                                }
                            }
                            //if position_empty(((mouse_x div 16)*16)+8,((mouse_y div 16)*16)){
                            if !collision_point(mouse_x,mouse_y,obj_superparent,true,true){
                                //if !collision_point(mouse_x,mouse_y,instance,false,false){
                                    if instance != obj_amiiboshroom{
                                        if instance != obj_solidplace_new{
                                            with instance_create(mouse_x,mouse_y,instance){
                                                x = ((mouse_x div 16)*16)+8;
                                                y = ((mouse_y div 16)*16)+8;
                                            }
                                            canPlace = 1;
                                            alarm[2] = 5;
                                        }
                                    //}
                                }
                            //}
                        //}
                        } else if sick = 0{
                            sick = 1;
                            if !collision_point(mouse_x,mouse_y,obj_superparent,false,false){
                                if instance != obj_amiiboshroom{
                                    with instance_create(mouse_x,mouse_y,instance){
                                        x = ((mouse_x div 16)*16)+8;
                                        y = ((mouse_y div 16)*16)-8;
                                    }
                                }
                            }
                        }
            //        }
                }
            }
        }
    //}
}
//}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance != obj_solidplace_new{
    draw_sprite(spriteVal,0,startx+8,y+offset-playVar);
} else {
    draw_sprite(spriteVal,0,startx,y-playVar);
}

//draw_text(128,128+random(256),x);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
